// Automatically generated by MockGen. DO NOT EDIT!
// Source: src/github.com/envoy/auto-spf-flattener/dns/cloudflare/cloudflare.go

package mock_cloudflare

import (
	cloudflare_go "github.com/cloudflare/cloudflare-go"
	gomock "github.com/golang/mock/gomock"
)

// Mock of CloudflareAPI interface
type MockCloudflareAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockCloudflareAPIRecorder
}

// Recorder for MockCloudflareAPI (not exported)
type _MockCloudflareAPIRecorder struct {
	mock *MockCloudflareAPI
}

func NewMockCloudflareAPI(ctrl *gomock.Controller) *MockCloudflareAPI {
	mock := &MockCloudflareAPI{ctrl: ctrl}
	mock.recorder = &_MockCloudflareAPIRecorder{mock}
	return mock
}

func (_m *MockCloudflareAPI) EXPECT() *_MockCloudflareAPIRecorder {
	return _m.recorder
}

func (_m *MockCloudflareAPI) CreateDNSRecord(_param0 string, _param1 cloudflare_go.DNSRecord) (*cloudflare_go.DNSRecordResponse, error) {
	ret := _m.ctrl.Call(_m, "CreateDNSRecord", _param0, _param1)
	ret0, _ := ret[0].(*cloudflare_go.DNSRecordResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudflareAPIRecorder) CreateDNSRecord(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateDNSRecord", arg0, arg1)
}

func (_m *MockCloudflareAPI) UpdateDNSRecord(_param0 string, _param1 string, _param2 cloudflare_go.DNSRecord) error {
	ret := _m.ctrl.Call(_m, "UpdateDNSRecord", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCloudflareAPIRecorder) UpdateDNSRecord(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateDNSRecord", arg0, arg1, arg2)
}

func (_m *MockCloudflareAPI) DeleteDNSRecord(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "DeleteDNSRecord", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCloudflareAPIRecorder) DeleteDNSRecord(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDNSRecord", arg0, arg1)
}

func (_m *MockCloudflareAPI) DNSRecords(_param0 string, _param1 cloudflare_go.DNSRecord) ([]cloudflare_go.DNSRecord, error) {
	ret := _m.ctrl.Call(_m, "DNSRecords", _param0, _param1)
	ret0, _ := ret[0].([]cloudflare_go.DNSRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudflareAPIRecorder) DNSRecords(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DNSRecords", arg0, arg1)
}

func (_m *MockCloudflareAPI) DNSRecord(_param0 string, _param1 string) (cloudflare_go.DNSRecord, error) {
	ret := _m.ctrl.Call(_m, "DNSRecord", _param0, _param1)
	ret0, _ := ret[0].(cloudflare_go.DNSRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudflareAPIRecorder) DNSRecord(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DNSRecord", arg0, arg1)
}
